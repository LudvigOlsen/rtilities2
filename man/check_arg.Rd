% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_argument.R
\name{check_arg}
\alias{check_arg}
\title{Apply common checks to a passed argument}
\usage{
check_arg(
  arg,
  type_check_fn = NULL,
  has_length = NULL,
  not_length = NULL,
  allowed_values = NULL,
  in_range = NULL,
  check_not_named = FALSE,
  check_all_named = FALSE,
  check_all_uniquely_named = FALSE,
  allow_null = TRUE,
  arg_name = NULL,
  type_name = NULL,
  message_fn = stop
)
}
\arguments{
\item{arg}{The variable to apply the checks to.
Can for instance be used to check the input of a function argument.}

\item{type_check_fn}{Function for checking the type of \code{arg}.
Like \code{\link[base:is.character]{is.character}} and \code{\link[base:is.numeric]{is.numeric}}.

When passing anonymous functions or functions with ambigious names,
consider passing \code{type_name} as well, for better error messages.}

\item{has_length}{A length to check against. Throws an error if \code{arg} has a \emph{different} length.}

\item{not_length}{A length to check against. Throw an error if \code{arg} has \emph{this} length.}

\item{allowed_values}{The values that \code{arg} is allowed to contain.

This check is implemented by applying \code{\link[base:setdiff]{setdiff()}}
to the recursively unlisted values in \code{arg}.}

\item{in_range}{The numeric range the values in \code{arg} should lie within.
Vector with 2 elements: \code{c(min, max)}.
\enumerate{
\item Throws error if the minimum value in \code{arg} is lower than the first value of \code{in_range}.
\item Throws error if the maximum value in \code{arg} is higher than the second value of \code{in_range}.
}}

\item{check_not_named}{Whether to ensure that \emph{none} of the elements are named. \emph{Not recursive}.}

\item{check_all_named}{Whether to ensure that \emph{all} of the elements are named. \emph{Not recursive}.}

\item{check_all_uniquely_named}{Whether to ensure that \emph{all} of the elements are \emph{uniquely} named. \emph{Not recursive}.}

\item{allow_null}{Whether \code{arg} is allowed to be \code{NULL}.
If \code{TRUE} and \code{arg} is \code{NULL}, the remaining checks are ignored.}

\item{arg_name}{Name of the argument, for improved error messaging.
If \code{NULL}, it is inferred via \code{deparse(substitute(arg))}.}

\item{type_name}{Name of the type(s) checked for with \code{type_check_fn}, for improved error messaging.
If \code{NULL}, it may be inferred via \code{deparse(substitute(type_check_fn))}.}

\item{message_fn}{Function for communication the error message to the user.

By default, \code{\link[base:stop]{stop()}} is used to throw an error.}
}
\value{
Throws an error with a suitable error message if any of the checks fail.

Does not return anything.
}
\description{
\Sexpr[results=rd, stage=render]{lifecycle::badge("experimental")}

Apply a set of common checks to a variable,
like the \strong{type}, \strong{length}, \strong{allowed values}, and whether
elements are \strong{named} properly.
}
\author{
Ludvig Renbo Olsen, \email{r-pkgs@ludvigolsen.dk}
}

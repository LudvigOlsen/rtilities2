% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_tmp_name.R
\name{create_tmp_name}
\alias{create_tmp_name}
\title{Create unique temporary name}
\usage{
create_tmp_name(data, name = ".tmp_")
}
\arguments{
\item{data}{Any data structure where names can be
accessed with \code{\link[base:names]{names()}}.
E.g. a data frame or list.}

\item{name}{Initial name to try.
If it's already in \code{data}, an underscore will be
appended until it is unique.}
}
\value{
Name not already in \code{data}.
}
\description{
\Sexpr[results=rd, stage=render]{lifecycle::badge("experimental")}

Adds underscore to \code{name} until it is unique in \code{data}.

Use case: Adding a temporary index column to a data frame within
a function, where you don't want to overwrite an existing column.
}
\examples{
# Attach packages
library(rtilities2)

# Create data frame
df <- data.frame("a" = c(1, 2), "b" = c(2, 3))
# Create named list
nl <- list("a" = c(1, 2), "b" = c(2, 3))

# Create unique name for the data frame
# As "a" is already in df, it appends a "_"
create_tmp_name(df, "a")

# Create unique name for the list
# As "a" is already in df, it appends a "_"
create_tmp_name(nl, "a")

# Using it within a function
# in order not to overwrite a user's column
foo <- function(data) {
  # Create unique temporary name
  tmp_colname <- create_tmp_name(data, ".tmp_index_")

  # Create index column with the name
  data[[tmp_colname]] <- seq_len(nrow(data))

  # Do something that reorders the data set
  data <- dplyr::sample_frac(data)

  # Order by the temporary index
  data <- dplyr::arrange_at(data, tmp_colname)

  # Remove the temporary index
  data[[tmp_colname]] <- NULL

  data
}

foo(df)
}
\author{
Ludvig Renbo Olsen, \email{r-pkgs@ludvigolsen.dk}
}
